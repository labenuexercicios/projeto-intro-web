
    const nome1= "Morro dos Crentes"
    const tempoDeCaminhada1= 30
    const facilAcesso1= true
    const caracteristicas1= ['Mirante', ' Pr√≥ximo √† cachoeira']
    const localizacao1= "-21.138974839880216, -44.2861929771177"

    const nome2=  "Pico dos Tr√™s Pont√µes"
    const tempoDeCaminhada2=  60
    const facilAcesso2=  false
    const caracteristicas2=  ['Mirante', ' Pr√≥ximo √† cachoeira', ' Possibilita escalada']
    const localizacao2= "-21.138974839880216, -44.2861929771177" 
   
    const nome3= "Morro das Almas"
    const tempoDeCaminhada3= 150
    const facilAcesso3= true
    const caracteristicas3= ['Mirante', ' Ponto de maior altitude do Parque']
    const localizacao3="-21.138974839880216, -44.2861929771177"
  
    const nome4= "Mirante dos Tr√™s Pont√µes"
    const tempoDeCaminhada4= 60
    const facilAcesso4= false
    const caracteristicas4= ['Mirante', ' Pr√≥ximo √† cachoeira', ' Possibilita escalada']
    const localizacao4="-21.138974839880216, -44.2861929771177"

//SEMANA 1 
// 3.Fa√ßa um c√°lculo de m√©dia, entre os valores num√©ricos respectivos de cada item. Imprima o valor da m√©dia utilizando um console.log. Guarde este valor em uma const;

let media =(tempoDeCaminhada1+tempoDeCaminhada2+tempoDeCaminhada3+tempoDeCaminhada4)/4
console.log(media);

// 4. Com um console.log, imprima o resultado de uma opera√ß√£o l√≥gica que checa se todos os valores de vari√°veis booleanas criadas at√© aqui s√£o verdadeiras.
        
let acessivel = (facilAcesso1&&facilAcesso2&&facilAcesso3)
console.log(acessivel);
// Semana 2
// 1. Crie pelo menos mais uma caracter√≠stica para o item que voc√™ criou. Esta caracter√≠stica deve ser um array. Mantenha o tipo de dado do array criado sempre o mesmo, isto √©, se √© um array de strings, s√≥ deve receber strings.

// 2. Exiba um relat√≥rio utilizando console.log(), mostrando todos os dados de cada um dos itens criados at√© aqui

console.log((`${nome1}`).toUpperCase(), `\n Tempo de Caminhada:${tempoDeCaminhada1}\n F√°cil Acesso:${facilAcesso1}\n Caracter√≠sticas:${caracteristicas1}\n Localiza√ß√£o:${localizacao1}\n`)
console.log((`${nome2}`).toUpperCase(), `\n Tempo de Caminhada:${tempoDeCaminhada2}\n F√°cil Acesso:${facilAcesso2}\n Caracter√≠sticas:${caracteristicas2}\n Localiza√ß√£o:${localizacao2}\n`)
console.log((`${nome3}`).toUpperCase(), `\n Tempo de Caminhada:${tempoDeCaminhada3}\n F√°cil Acesso:${facilAcesso3}\n Caracter√≠sticas:${caracteristicas3}\n Localiza√ß√£o:${localizacao3}\n`)
console.log((`${nome4}`).toUpperCase(), `\n Tempo de Caminhada:${tempoDeCaminhada4}\n F√°cil Acesso:${facilAcesso4}\n Caracter√≠sticas:${caracteristicas4}\n Localiza√ß√£o:${localizacao4}\n`)

// Semana 3
//1. Transforme os itens que criamos nas √∫ltimas semanas em objetos.

const morro1 = {
    nome: "Morro dos Crentes",
    tempoDeCaminhada: 30,
    facilAcesso: true,
    caracteristicas: ['Mirante', ' Pr√≥ximo √† cachoeira'],
    localizacao:"-21.138974839880216, -44.2861929771177"
    }
const morro2 = {
    nome : "Pico dos Tr√™s Pont√µes",
    tempoDeCaminhada : 60,
    facilAcesso : true,
    caracteristicas : ['Mirante', ' Pr√≥ximo √† cachoeira', ' Possibilita escalada'],
    localizacao:"-21.138974839880216, -44.2861929771177"
   
    }
const morro3 = {
    nome : "Morro das Almas",
    tempoDeCaminhada : 150,
    facilAcesso : true,
    caracteristicas : ['Mirante', ' Ponto de maior altitude do Parque'],
    localizacao:"-21.138974839880216, -44.2861929771177"
    }
const morro4 = {
    nome : "Mirante dos Tr√™s Pont√µes",
    tempoDeCaminhada : 60,
    facilAcesso : false,
    caracteristicas : ['Mirante', ' Pr√≥ximo √† cachoeira', ' Possibilita escalada'],
    localizacao:"-21.138974839880216, -44.2861929771177"
    }


// 2. Crie um array para guardar os objetos. Este array deve estar vazio, por enquanto;

const mirantes=[]

// 3. Adicione os objetos criados no item 1 ao array de objetos criado no item 2, utilizando o push() .
// mirantes= [
//     {
//     nome: "Morro dos Crentes",
//     tempoDeCaminhada: 30,
//     facilAcesso: true,
//     caracteristicas: ['Mirante', ' Pr√≥ximo √† cachoeira'],
//     img: "https://altamontanha.com/wp-content/uploads/2019/03/len7.jpg"
//     },
//     {
//     nome : "Pico dos Tr√™s Pont√µes",
//     tempoDeCaminhada : 60,
//     facilAcesso : true,
//     caracteristicas : ['Mirante', ' Pr√≥ximo √† cachoeira', ' Possibilita escalada'],
//     img:"https://www.pousoeprosa.com.br/atrativos_turisticos/204/772fd10261d400157265471cda6ce643.jpg"
//     },    
//     {
//     nome : "Morro das Almas",
//     tempoDeCaminhada : 150,
//     facilAcesso : true,
//     caracteristicas : ['Mirante', ' Ponto de maior altitude do Parque'],
//     img:"http://1.bp.blogspot.com/-r8PM14lowd4/TniIL3sdwII/AAAAAAAAARI/WKgR6VplNNo/s1600/7.JPG"
//     },
//     {
//     nome : "Mirante dos Tr√™s Pont√µes",
//     tempoDeCaminhada : 60,
//     facilAcesso : false,
//     caracteristicas : ['Mirante', ' Pr√≥ximo √† cachoeira', ' Possibilita escalada'],
    
//     },
// ] 
// semana 4
// // 1. Altere o item ‚ÄúAdicione os novos objetos no array de objetos, utilizando o push()‚Äù (item 3 da semana 3), para criar uma verifica√ß√£o antes de dar o push. A carater√≠stica booleana do objeto deve ser validada. Isto √©, o objeto s√≥ deve ser adicionado ao array se a propriedade booleana for true;

// // 2. Crie uma condi√ß√£o else, que, em caso de valor false na condi√ß√£o acima, exiba um **ALERT** avisando para o usu√°rio que o item n√£o foi adicionado, e n√£o fa√ßa o push

if ( morro1.facilAcesso===true ) {
    mirantes.push(morro1 )
} else {
    alert(  morro1.nome +' n√£o entra nesta lista'  )
}
if ( morro2.facilAcesso===true ) {
    mirantes.push(morro2 )
} else {
    alert(  morro2.nome +' n√£o entra nesta lista'  )
}
if ( morro3.facilAcesso===true ) {
    mirantes.push(morro3 )
} else {
    alert(  morro3.nome +' n√£o entra nesta lista'  )
}
// if ( morro4.facilAcesso===true ) {
//     mirantes.push(morro4 )
// } else {
//     alert(  morro4.nome +' n√£o entra nesta lista'  )
// }
// Ternario
morro4.facilAcesso===true ?  mirantes.push(morro4 ): alert(  morro4.nome +' n√£o entra nesta lista')


// Semana 5
// 1. Reescrevendo o relat√≥rio criado utilizando console.log() que come√ßamos na semana 2, altere a forma que a caracter√≠stica de array dos itens seja escrita como um la√ßo que guarde todos os valores da propriedade array do objeto em uma mesma string. Utilize esta string no relat√≥rio.

// 2. Ainda no relat√≥rio, altere-o para que ele seja criado utilizando um la√ßo. Ou seja, voc√™ n√£o deve mais imprimir individualmente cada item do relat√≥rio. Cada item deve ser exibido a partir de uma itera√ß√£o do la√ßo. Para testar, adicione mais um item ao array de objetos, e verifique se ele √© exibido corretamente.

for (let mirante of mirantes) {
    console.log(`Nome: ${mirante.nome}, \nTempo de Caminhada: ${mirante.tempoDeCaminhada}, \nF√°cil Acesso? ${mirante.facilAcesso ? "Sim" : "N√£o"}, \nCaracter√≠sticas: ${mirante.caracteristicas}, \nLocaliza√ß√£o: ${mirante.localizacao}`)
}

//SEMANA 6
//1. Crie uma fun√ß√£o que receba como par√¢metro um objeto, e devolva a string do relat√≥rio com os dados do objeto.

function imprimeString(objeto) { //IMPRIME UM √öNICO OBJETO

    console.log("Este √© um dos mirantes do Parque Ecol√≥gico da Serra do Lenheiro:", objeto.nome, objeto.tempoDeCaminhada, objeto.localizacao , objeto.caracteristicas)

}
imprimeString(morro1)
//aqui eu t√¥ chamando a fun√ß√£o de antes pra imprimir na nova fun√ß√£o
function imprimeStringObjeto(objetos) { //IMPRIME A LISTA DE OBJETOS DO ARRAY
    for (let string of objetos) {
        imprimeString(string)
    }
}
imprimeStringObjeto(mirantes)

//2. Crie uma fun√ß√£o que recebe um array de objetos e uma string. Esta fun√ß√£o deve retornar um objeto, e o objeto retornado deve possuir apenas os itens que tenham o nome/t√≠tulo igual √† string passada como par√¢metro. Caso n√£o exista um item, exiba um ALERT indicando que nenhum item foi encontrado.

//criar fun√ß√£o com dois parametros, array de objetos e string
//fun√ß√£o retorna objeto
//objeto precisa ter vaor igual ao parametro passado como string //USAR FILTER?
//caso n√£o tenha valor igual ao parametro, rodar alerta

function arrayMirantes(mirante, morro) {
    const resultado = mirante.filter(morro => {
        return morro.nome.toUpperCase().includes(morro)
    })
    if (resultado.length === 0) {
        alert("Mirante n√£o encontrado")
    } else {
        return resultado
    }
}
 const morro = prompt("Busque por mirantes aqui:")
// console.log(arrayMirantes (mirantes, morro))

let filtroMorros = arrayMirantes(mirantes, morro)
imprimeStringObjeto(filtroMorros)

// Semana 7
// SEMANA 7
// 1. Crie uma p√°gina HTML, e nesta p√°gina, d√™ um t√≠tulo para sua lista de itens;
// 2. Crie um cabe√ßalho, uma se√ß√£o principal, e um footer para a p√°gina;
// 3. Na se√ß√£o principal. Crie duas divis√µes. Uma deve possuir um input e um bot√£o. A outra, deve possuir sections para criar os itens da lista;
// 4. Crie uma section para cada item da lista;
// 5. Para cada um dos tr√™s itens criados deve possuir todas as informa√ß√µes do array de objetos. As informa√ß√µes devem estar elencadas como lista n√£o ordenada. Esta tela n√£o precisa interagir com o JavaScript, tendo seus dados escritos diretamente nos elementos.
// 6. Transforme o nome/t√≠tulo do item em um link para um artigo sobre este item (pode ser do google, de algum blog ou da Wikip√©dia)
// üí° Recomendamos adicionar imagens a seus itens agora. Ao fazer isso, lembre-se de criar mais uma propriedade String nos seus objetos, para guardar o caminho do link at√© a imagem.

function buscarMirantes() {

    let container;

    const search = document.querySelector("#pesquisaMirantes").value;
    if (!search) {
        alert("Digite algo para que a busca aconte√ßa");
    } else {
        const miranteSelecionado = arrayMirantes(mirantes, search);
      
    criaCard(miranteSelecionado)

//         console.log(miranteSelecionado);

//         container = `<section class="itens">
//        <img src="https://altamontanha.com/wp-content/uploads/2019/03/len7.jpg">
//         <ul>
                // <li><p>Nome:</p> ${miranteSelecionado.nome}</li>
                // <li><p>Tempo De Caminhada:</p> ${miranteSelecionado.tempoDeCaminhada}</li>
                // <li><p>F√°cil Acesso?</p> ${miranteSelecionado.facilAcesso}</li>
                // <li><p>Caracteristicas:</p> ${miranteSelecionado.caracteristicas}</li>
                // <li><p>Localiza√ß√£o:</p> ${miranteSelecionado.localizacao}</li>
                // </ul>
//    </section>`;

//         document.querySelector("#itensContainer").innerHTML = "";
//         document.querySelector("#itensContainer").innerHTML = container;

    }
}
function criaCard(morros) {
    let itens = document.getElementById("itensContainer");
    itens.innerHTML = ""

    let container

    for (const morro of morros) {
        container = `<section class="itens">
        <img src= ${morro.img}>
        <ul>
            <li><p>Nome:</p> ${morro.nome}</li>
            <li><p>Tempo De Caminhada:</p> ${morro.tempoDeCaminhada}</li>
            <li><p>F√°cil Acesso?</p> ${morro.facilAcesso}</li>
            <li><p>Caracteristicas:</p> ${morro.caracteristicas}</li>
            <li><p>Localiza√ß√£o:</p> ${morro.localizacao}</li>
        </ul>
    </section>`;
 
     itens.innerHTML += container;
    }

}

criaCard(mirantes)


